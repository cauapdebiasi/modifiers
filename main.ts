/*
 *  ATIVIDADE FINALIZADA
 *  Projeto orientado a objetos que visa demonstrar o funcionamento da troca de marchas
 *  de um veÃ­culo (caminhÃ£o) com um sistema de transmissÃ£o automÃ¡tico
 */

/**
 * Classe VeÃ­culo (genÃ©rica)
 * Representa as caracterÃ­sticas presentes na maioria dos veÃ­culos
 */
class Vehicle {
    protected _km = 0;
    
    constructor(public model: string,public wheels: number,public axles: number,public capacity: number) {
    }
}

/**
 * Classe Caixa de cÃ¢mbio
 * Representa as caracterÃ­sticas e mÃ©todos tradicionais presentes nas caixas de cÃ¢mbio
 */
class GearBox {
    protected readonly MAX_SHIFTS = 15 // Limite total de trocas para cada troca de Ã³leo
    private _totalShifts = 0 // Contagem do total de trocas de marcha desde a Ãºltima troca de Ã³leo
    protected _gear = 0 // -1 = RÃ© e 0 = Neutro ... vai atÃ© o limite definido pela quantidade de marchas no construtor pelo parÃ¢metro _gears
    protected _oilState: "new" | "good" | "bad" = "new" // Estado atual do Ã³leo

    constructor(public model: string, private _gears: number) {}

    /**
     * LÃ³gica de troca de marcha, se aplica a ambas as funÃ§Ãµes shift (passar) e unshift (voltar)
     * realiza as verificaÃ§Ãµes referente as condiÃ§Ãµes do Ã³leo e atualiza o estado da instÃ¢ncia
     * 
     */
    public shift(): void {
        if (!this._validGear(this._gear + 1)) return
        if (!this._shouldShift()) console.log("LÃ¡ se vÃ£o as engrenagens ğŸ’¨")
        this._totalShifts++
        this._gear++
        this._updateOilState()
        console.log(`Subiu para a marcha ${this._gear} ğŸ”º`)
    }

    /**
     * LÃ³gica de troca de marcha, se aplica a ambas as funÃ§Ãµes shift (passar) e unshift (voltar)
     * realiza as verificaÃ§Ãµes referente as condiÃ§Ãµes do Ã³leo e atualiza o estado da instÃ¢ncia
     * 
     */
    public unshift(): void {
        if (!this._validGear(this._gear - 1)) return
        if (!this._shouldShift()) console.log("LÃ¡ se vÃ£o as engrenagens ğŸ’¨")
        this._totalShifts++
        this._gear--
        this._updateOilState()
        console.log(`Reduziu para a marcha ${this._gear} ğŸ”»`)
    }

    /**
     * Realiza a "troca de Ã³leo" da caixa, resetando o estado da condiÃ§Ã£o do Ã³leo
     */
    public changeOil(): void {
        this._totalShifts = 0
        this._updateOilState()
        console.log("Ã“leo trocado!ğŸ’§")
    }

    /**
     * Atualiza o estado do Ã³leo baseado na quantidade de trocas totais
     */
    private _updateOilState():void {
        if (this._totalShifts > 10) {
            this._oilState = "bad"
            return
        }
        if (this._totalShifts > 5) {
            this._oilState = "good"
            return
        }
        this._oilState = "new"

    }

    /**
     * VerificaÃ§Ã£o bÃ¡sica para garantir que nÃ£o seja possÃ­vel colocar uma marcha maior que o limite e menor que a rÃ©
     */
    private _validGear(nextGear: number): boolean {
        return nextGear < this._gears || nextGear >= -1
    }

    /**
     * VerificaÃ§Ã£o das condiÃ§Ãµes do Ã³leo na hora da troca
     * Entra em pÃ¢nico caso a prÃ³xima troca ultrapasse o limite
     */
    private _shouldShift(): boolean {
        if (this._totalShifts > this.MAX_SHIFTS) throw 'TA PEGANU FOGO BIXO ğŸ’¥ğŸ’¥'
        if (this._oilState === "bad") return false
        return true
    }

    /**
     * 
     * Retorna a marcha atualmente selecionada
     */
    public currentGear(): number {
        return this._gear
    }
}

/**
 * Classe CaminhÃ£o
 * Representa o caminhÃ£o final atravÃ©s da heranÃ§a e da composiÃ§Ã£o das outras classes
 * tambÃ©m representa a interface de um caminhÃ£o real jÃ¡ que abstrai algumas partes
 * do funcionamento interno
 */
class Truck extends Vehicle {

    protected _gearBox = new GearBox("gr905",12)

    constructor(model,wheels,axles, capacity) {
        super(model,wheels,axles,capacity);
        console.log(`ğŸš› ${model} de ${axles} eixos foi instanciado`)
    }

    /**
     * Chama o mÃ©todo de troca da caixa de marcha
     */
    public shift(): void {
        this._gearBox.shift()
    }
    /**
     * Chama o mÃ©todo de troca da caixa de marcha
     */
    public unshift(): void {
        this._gearBox.unshift()
    }

    /**
     * Exibe qual a marcha atual selecionada de forma mais amigÃ¡vel para ser exibida no painel
     */
    public displayCurrentGear() {
        const currentGear = this._gearBox.currentGear()
        switch(currentGear) {
            case -1:
                console.log("R")
                break
            case 0:
                console.log("N")
                break
            default:
                console.log(currentGear)
        }
    }

    /**
     * Fornece uma ponte para que um mÃ³dulo externo consiga se acoplar no caminhÃ£o e ter acesso
     * as informaÃ§Ãµes da caixa de marcha
     */
    public accessGearBox(): GearBox {
        return this._gearBox
    }
}

/**
 * Exemplo de uso
 */
const truck = new Truck("Scania", 6,3,2) // ğŸš› Scania de 3 eixos foi instanciado
truck.shift() // Subiu para a marcha 1
truck.shift() // Subiu para a marcha 2
truck.shift() // Subiu para a marcha 3
truck.shift() // Subiu para a marcha 4
truck.shift() // Subiu para a marcha 5
truck.unshift() // Reduziu para a marcha 4 
truck.unshift() // Reduziu para a marcha 3
truck.shift() // Subiu para a marcha 4
truck.shift() // Subiu para a marcha 5
truck.unshift // Reduziu para a marcha 4
truck.unshift() // Reduziu para a marcha 3
// LÃ¡ se vÃ£o as engrenagens ğŸ’¨
truck.unshift() // Reduziu para a marcha 2
// LÃ¡ se vÃ£o as engrenagens ğŸ’¨
truck.unshift() // Reduziu para a marcha 1
// LÃ¡ se vÃ£o as engrenagens ğŸ’¨
truck.shift() // Subiu para a marcha 2
// LÃ¡ se vÃ£o as engrenagens ğŸ’¨
truck.shift() // Subiu para a marcha 3
// LÃ¡ se vÃ£o as engrenagens ğŸ’¨
truck.shift() // Subiu para a marcha 4
// LÃ¡ se vÃ£o as engrenagens ğŸ’¨
truck.unshift() // Reduziu para a marcha 3 
// LÃ¡ se vÃ£o as engrenagens ğŸ’¨
truck.unshift() // Reduziu para a marcha 2
// LÃ¡ se vÃ£o as engrenagens ğŸ’¨
truck.unshift() // Reduziu para a marcha 1
// 'TA PEGANU FOGO BIXO ğŸ’¥ğŸ’¥'